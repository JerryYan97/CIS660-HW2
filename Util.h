#pragma once
#include <string>

// GUI Command:
std::string cmd =
"proc browseFiles()\n"
"{\n"
"	string $file[] = `fileDialog2 -fm 1 -fileFilter \"All Files(*.txt)\"`;\n"
"	$fileId = `fopen $file[0] \"r\"`;\n"
"	string $result;\n"
"	string $nextLine = `fgetline $fileId`;\n"
"	while ( size( $nextLine ) > 0 )\n"
"	{\n"
"		$result = $result + $nextLine;\n"
"		$nextLine = `fgetline $fileId`;\n"
"	}\n"
"	scrollField -edit -cl SF;\n"
"	scrollField -edit -text $result SF;\n"
"}\n"
"proc on_create_static()\n"
"{\n"
"	string $grammar = `scrollField -q -text SF`;\n"
"   int $iteration = `intSliderGrp -q -v iterationsSlider`;\n"
"   float $stepsize = `floatSliderGrp -q -v stepSizeSlider`;\n"
"   float $angle = `floatSliderGrp -q -v angleSlider`;\n"
"   LSystemCmd -g $grammar -i $iteration -sz $stepsize -a $angle;\n"
"}\n"
"proc on_create_dynamic()\n"
"{\n"
"    string $grammar = `scrollField -q -text SF`;\n"
"    float $stepsize = `floatSliderGrp -q -v stepSizeSlider`;\n"
"    float $angle = `floatSliderGrp -q -v angleSlider`;\n"
"    if (`objExists LSystem1`) delete LSystem1;\n"
"    if (`objExists LSystemShape1`) delete LSystemShape1;\n"
"    if (`objExists LSystemNode1`) delete LSystemNode1;\n"
"    createNode transform -n LSystem1;\n"
"    createNode mesh -n LSystemShape1 -p LSystem1;\n"
"    sets -add initialShadingGroup LSystemShape1;\n"
"    createNode LSystemNode -n LSystemNode1;\n"
"    connectAttr time1.outTime LSystemNode1.time;\n"
"    connectAttr LSystemNode1.outputMesh LSystemShape1.inMesh;\n"
"    setAttr LSystemNode1.angle $angle;\n"
"    setAttr LSystemNode1.step $stepsize;\n"
"    setAttr LSystemNode1.grammar -type \"string\" $grammar;\n"
"}\n"
"proc createStaticLSystemWindow()\n"
"{\n"
"if(`window -ex \"StaticLWindow\"`)\n"
"{\n"
"	deleteUI \"StaticLWindow\";\n"
"}\n"
"window -title \"Call Static LSystem Command\" -w 500 -h 300 \"StaticLWindow\";\n"
"columnLayout -adj true -rs 10;\n"
"    rowLayout -numberOfColumns 2 -columnWidth2 200 300 -columnAttach 1 \"left\" 0 -columnAttach 2 \"right\" 0;\n"
"        text - label \"Browse for grammar files\"; \n"
"        button -label \"Browse Files\" -command \"browseFiles()\";\n"
"    setParent ..;\n"
"    scrollField -width 500 -height 100 -text \"F\\nF->F[+F]F[-F]F\" SF;\n"
"    frameLayout -label \"LSystem Parameters\";\n"
"        columnLayout -adjustableColumn true;\n"
"        intSliderGrp -label \"Iterations\" -field true iterationsSlider;\n"
"        floatSliderGrp -label \"Default Step Size\" -field true stepSizeSlider;\n"
"        floatSliderGrp -label \"Default Angle\" -field true angleSlider;\n"
"    setParent ..;\n"
"    rowLayout -numberOfColumns 2 -columnWidth2 100 400 -columnAttach 1 \"left\" 10 -columnAttach 2 \"right\" 10;\n"
"        button -label \"Create\" -command \"on_create_static()\";\n"
"        button -label \"Cancel\" -command \"deleteUI StaticLWindow; \"; \n"
"    setParent ..;\n"
"setParent ..;\n"
"showWindow;\n"
"}\n"
"proc createDynamicLSystemWindow()\n"
"{\n"
"if(`window -ex \"DynamicLWindow\"`)\n"
"{\n"
"	deleteUI \"DynamicLWindow\";\n"
"}\n"
"window -title \"Call Dynamic LSystem Command\" -w 500 -h 300 \"DynamicLWindow\";\n"
"columnLayout -adj true -rs 10;\n"
"    rowLayout -numberOfColumns 2 -columnWidth2 200 300 -columnAttach 1 \"left\" 0 -columnAttach 2 \"right\" 0;\n"
"        text - label \"Browse for grammar files\"; \n"
"        button -label \"Browse Files\" -command \"browseFiles()\";\n"
"    setParent ..;\n"
"    scrollField -width 500 -height 100 -text \"F\\nF->F[+F]F[-F]F\" SF;\n"
"    frameLayout -label \"LSystem Parameters\";\n"
"        columnLayout -adjustableColumn true;\n"
"        floatSliderGrp -label \"Default Step Size\" -field true stepSizeSlider;\n"
"        floatSliderGrp -label \"Default Angle\" -field true angleSlider;\n"
"    setParent ..;\n"
"    rowLayout -numberOfColumns 2 -columnWidth2 100 400 -columnAttach 1 \"left\" 10 -columnAttach 2 \"right\" 10;\n"
"        button -label \"Create\" -command \"on_create_dynamic()\";\n"
"        button -label \"Cancel\" -command \"deleteUI DynamicLWindow; \"; \n"
"    setParent ..;\n"
"setParent ..;\n"
"showWindow;\n"
"}\n"

"global string $gMainWindow;\n"
"setParent $gMainWindow;\n"
"menu -label \"LSystemCmd\" -tearOff true;\n"
"    menuItem -label \"Static LSystem Command\" -command \"createStaticLSystemWindow()\";\n"
"    menuItem -label \"Dynamic LSystem Command\" -command \"createDynamicLSystemWindow()\";\n";